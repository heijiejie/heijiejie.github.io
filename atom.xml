<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Heijiejie的博客小站</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-06T04:29:14.060Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Heijiejie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/04/06/Markdown%20%E8%AF%AD%E6%B3%95%E7%9A%84%E7%AE%80%E8%A6%81%E8%A7%84%E5%88%99/"/>
    <id>http://yoursite.com/2018/04/06/Markdown 语法的简要规则/</id>
    <published>2018-04-06T04:29:13.915Z</published>
    <updated>2018-04-06T04:29:14.060Z</updated>
    
    <content type="html"><![CDATA[<p>title: Markdown 语法的简要规则</p><p>date: 2018-04-04 22:21:50<br>tags: </p><p>-Markdown </p><p>categories:</p><p>-html</p><h2 id="Markdown-语法的简要规则"><a href="#Markdown-语法的简要规则" class="headerlink" title="Markdown 语法的简要规则"></a>Markdown 语法的简要规则</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69492.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p><p>标题是每篇文章都需要也是最常用的格式，在 Markdown 中，如果一段文字被定义为标题，只要在这段文字前加 <code>#</code> 号即可。</p><p><code># 一级标题</code></p><p><code>## 二级标题</code></p><p><code>### 三级标题</code></p><p>以此类推，总共六级标题，建议在井号后加一个空格，这是最标准的 Markdown 语法。</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>熟悉 HTML 的同学肯定知道有序列表与无序列表的区别，在 Markdown 下，列表的显示只需要在文字前加上 <code>-</code> 或 <code>*</code> 即可变为无序列表，有序列表则直接在文字前加 <code>1.`</code>2.<code></code>3.` 符号要和文字之间加上一个字符的空格。</p><p><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69493.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>如果你需要引用一小段别处的句子，那么就要用引用的格式。</p><p><code>&gt; 例如这样</code></p><p>只需要在文本前加入 <code>&gt;</code> 这种尖括号（大于号）即可</p><p><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69494.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p><h3 id="图片与链接"><a href="#图片与链接" class="headerlink" title="图片与链接"></a>图片与链接</h3><p>插入链接与插入图片的语法很像，区别在一个 <code>!</code>号</p><p>插入图片的地址需要图床，这里推荐 <a href="http://www.getcloudapp.com/" target="_blank" rel="noopener">CloudApp</a> 的服务，生成URL地址即可。</p><p><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69495.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p><h3 id="粗体与斜体"><a href="#粗体与斜体" class="headerlink" title="粗体与斜体"></a>粗体与斜体</h3><p>Markdown 的粗体和斜体也非常简单，用两个 <code>*</code> 包含一段文本就是粗体的语法，用一个 <code>*</code> 包含一段文本就是斜体的语法。</p><p>例如：<strong>这里是粗体*</strong>这里是斜体*</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>表格是我觉得 Markdown 比较累人的地方，例子如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| Tables        | Are           | Cool  |</span><br><span class="line">| ------------- |:-------------:| -----:|</span><br><span class="line">| col 3 is      | right-aligned | $1600 |</span><br><span class="line">| col 2 is      | centered      |   $12 |</span><br><span class="line">| zebra stripes | are neat      |    $1 |</span><br></pre></td></tr></table></figure><p>这种语法生成的表格如下：</p><table><thead><tr><th>Tables</th><th>Are</th><th>Cool</th></tr></thead><tbody><tr><td>col 3 is</td><td>right-aligned</td><td>$1600</td></tr><tr><td>col 2 is</td><td>centered</td><td>$12</td></tr><tr><td>zebra stripes</td><td>are neat</td><td>$1</td></tr></tbody></table><h3 id="代码框"><a href="#代码框" class="headerlink" title="代码框"></a>代码框</h3><p>如果你是个程序猿，需要在文章里优雅的引用代码框，在 Markdown 下实现也非常简单，只需要用两个 <code>把中间的代码包裹起来，如 `</code>code<code></code>。图例：</p><p><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69496.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p><p>使用 <code>tab</code> 键即可缩进。</p><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>分割线的语法只需要另起一行，连续输入三个星号 <code>***</code> 即可。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>到这里，Markdown 的基本语法在日常的使用中基本就没什么大问题了，只要多加练习，配合好用的工具，写起东西来肯定会行云流水。更多的语法规则，其实 Mou 的 Help 文档例子很好，当你第一次使用 Mou 时，就会显示该文档，其次，你也可在撰写过程中，使用 <code>CMD+R</code> 快捷键来快速打开文档，以随时查阅和学习语法。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: Markdown 语法的简要规则&lt;/p&gt;
&lt;p&gt;date: 2018-04-04 22:21:50&lt;br&gt;tags: &lt;/p&gt;
&lt;p&gt;-Markdown &lt;/p&gt;
&lt;p&gt;categories:&lt;/p&gt;
&lt;p&gt;-html&lt;/p&gt;
&lt;h2 id=&quot;Markdown
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>微信小程序传值以及获取值方法</title>
    <link href="http://yoursite.com/2018/04/04/hello/"/>
    <id>http://yoursite.com/2018/04/04/hello/</id>
    <published>2018-04-04T14:21:50.000Z</published>
    <updated>2018-04-05T08:31:40.176Z</updated>
    
    <content type="html"><![CDATA[<h3 id="微信小程序传值以及获取值方法"><a href="#微信小程序传值以及获取值方法" class="headerlink" title="微信小程序传值以及获取值方法"></a>微信小程序传值以及获取值方法</h3><p>微信小程序传值以及获取值方法，传值有两种方法，对应也有获取值得方法，1、设置id的方法标识跳转后传递的参数值；2、通过使用data - xxxx 的方法来标识要传递的值</p><p>微信小程序设置id的方法标识来传值</p><p>在要跳转的item处，设置一个id并给当前的id赋值上对应的key值，比如一部电影的id（后面带着id去下一个页面查询，详细信息）如：</p><p>微信小程序设置id的方法标识跳转来传值</p><p>后我们在js的bindtap的响应事件中获取，并传递到下一个界面中；</p><p>获取到id传的值</p><p>通过e.currentTarget.id;获取设置的id值，并通过设置全局对象的方式来传递数值， 获取全局对象 var app=getApp(); //设置全局的请求访问传递的参数 app.requestDetailid=id;</p><p>微信小程序获取到id传的值</p><p>提示：其实我们也可以在，wxml中查看到我们设置的每一个item的id值</p><p>通过使用data - xxxx 的方法标识来传值</p><p>通过使用data - xxxx 的方法标识来传值，xxxx可以自定义取名 比如data-key等等都可以。</p><p>微信小程序如何获取data-xxxx传递的值？</p><p>如何获取data-xxxx传递的值？</p><p>在js的bindtap的响应事件中：</p><p>通过数据解析一层层找到数据，var id=e.target.dataset.id(根据你的data-id的取名)</p><p>微信小程序如何获取data-xxxx传递的值？</p><p>微信小程序如何跨页面获取值？</p><p>依据上面的方式设置要传递的值，页面跳转后，我们就需要在下一个页面拿到传递的数据（这个数据在传递前，就已经被设置成全局变量）</p><p>在跳转后的js页面，接收传递过来的数据detail.js</p><p>同样通过全局额方式取值出来，（即和app.js中取某个变量的值是一样的）</p><p>var movieid=getApp().MovieDetailid; console.log(movieid);</p><p>微信小程序如何跨页面获取值？</p><p>到此为止，我们数值传递并接收成功，后面就可以根据我们接收的参数，进行进一步的操作了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;微信小程序传值以及获取值方法&quot;&gt;&lt;a href=&quot;#微信小程序传值以及获取值方法&quot; class=&quot;headerlink&quot; title=&quot;微信小程序传值以及获取值方法&quot;&gt;&lt;/a&gt;微信小程序传值以及获取值方法&lt;/h3&gt;&lt;p&gt;微信小程序传值以及获取值方法，传值有两种方法
      
    
    </summary>
    
      <category term="html" scheme="http://yoursite.com/categories/html/"/>
    
    
      <category term="微信小程序" scheme="http://yoursite.com/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/04/04/hello-world/"/>
    <id>http://yoursite.com/2018/04/04/hello-world/</id>
    <published>2018-04-04T13:36:50.420Z</published>
    <updated>2018-04-04T13:36:50.422Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
