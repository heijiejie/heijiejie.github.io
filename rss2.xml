<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>heijiejie的博客小站</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    <atom:link href="%5Bobject%20Object%5D" rel="hub"/>
    <description>heijiejie的博客小站</description>
    <pubDate>Sat, 07 Apr 2018 14:25:39 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>javascript 字符串拆开与合合并</title>
      <link>http://yoursite.com/2018/04/07/javascript-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%86%E5%BC%80%E4%B8%8E%E5%90%88%E5%90%88%E5%B9%B6/</link>
      <guid>http://yoursite.com/2018/04/07/javascript-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%86%E5%BC%80%E4%B8%8E%E5%90%88%E5%90%88%E5%B9%B6/</guid>
      <pubDate>Sat, 07 Apr 2018 14:25:39 GMT</pubDate>
      <description>
      
      </description>
      
      <comments>http://yoursite.com/2018/04/07/javascript-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%86%E5%BC%80%E4%B8%8E%E5%90%88%E5%90%88%E5%B9%B6/#disqus_thread</comments>
    </item>
    
    <item>
      <title>my first javascript</title>
      <link>http://yoursite.com/2018/04/07/my-first-javascript/</link>
      <guid>http://yoursite.com/2018/04/07/my-first-javascript/</guid>
      <pubDate>Sat, 07 Apr 2018 06:15:48 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;JS实时获取输入框中的值&quot;&gt;&lt;a href=&quot;#JS实时获取输入框中的值&quot; class=&quot;headerlink&quot; title=&quot;JS实时获取输入框中的值&quot;&gt;&lt;/a&gt;JS实时获取输入框中的值&lt;/h3&gt;&lt;p&gt;　　实时获取input输入框中的值需要oninput和onp
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="JS实时获取输入框中的值"><a href="#JS实时获取输入框中的值" class="headerlink" title="JS实时获取输入框中的值"></a>JS实时获取输入框中的值</h3><p>　　实时获取input输入框中的值需要oninput和onpropertychange属性来实现。原因是onpropertychange属性为IE专属，而oninput属性支持大部分浏览器包括IE9及以上的版本。</p><p>　　oninput与onpropertychange失效的情况：<br>　　oninput事件：</p><p>​        1.在脚本中改变value时，不会触发；</p><p>​    2.从浏览器的自动下拉提示中选取时，不会触发。</p><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;body&gt;&lt;body&gt;    &lt;input type=&quot;text&quot; id=&quot;userdata&quot;  name=&quot;test&quot;&gt;    &lt;output type=&quot;text&quot; id=&quot;user&quot;  name=&quot;test&quot;&gt;    &lt;script&gt;    var data = document.getElementById(&apos;userdata&apos;);    if(&apos;oninput&apos; in data){             data.addEventListener(&quot;input&quot;,getWord,false);         }else{             data.onpropertychange = getWord;         }        function getWord(){        document.getElementById(&quot;user&quot;).innerHTML = data.value;    }    &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><img src="/2018/04/07/my-first-javascript/Users\ADMINI~1\AppData\Local\Temp\1523111640206.png" alt="152308200835"></p><h3 id="JS获取输入字符串并将实现大小写字母切换"><a href="#JS获取输入字符串并将实现大小写字母切换" class="headerlink" title="JS获取输入字符串并将实现大小写字母切换"></a>JS获取输入字符串并将实现大小写字母切换</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">js</span>字母大小写转换方法：</span><br><span class="line">1<span class="selector-class">.toLocaleUpperCase</span>()</span><br><span class="line">2<span class="selector-class">.toUpperCase</span>()</span><br><span class="line">3<span class="selector-class">.toLocaleLowerCase</span>()</span><br><span class="line">4<span class="selector-class">.toLowerCase</span>() </span><br><span class="line"></span><br><span class="line">下面就这四个实现大小写转换的<span class="selector-tag">js</span>函数逐一做简单的分析。</span><br><span class="line">1<span class="selector-class">.toLocaleUpperCase</span> </span><br><span class="line">将字符串中所有的字母字符都将被转换为大写的，同时适应宿主环境的当前区域设置。</span><br><span class="line"> </span><br><span class="line">2<span class="selector-class">.toUpperCase</span></span><br><span class="line">将字符串中的所有字母都被转化为大写字母。</span><br><span class="line"> </span><br><span class="line">3<span class="selector-class">.toLocaleLowerCase</span> </span><br><span class="line">将字符串所有的字母字符都被转换为小写，同时考虑到宿主环境的当前区域设置。</span><br><span class="line"> </span><br><span class="line">4<span class="selector-class">.toLowerCase</span></span><br><span class="line">将字符串中的字母被转换为小写字母</span><br></pre></td></tr></table></figure><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;    &lt;title&gt;大小写字母转换&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;p&gt;大小写字母转换.&lt;/p&gt;    &lt;form id=&quot;test-form&quot;&gt;        &lt;input type=&quot;text&quot; id=&quot;userdata&quot;  name=&quot;test&quot;&gt;        &lt;button type=&quot;button&quot; onclick=&quot;myFunction()&quot;&gt;Submit&lt;/button&gt;        &lt;button type=&quot;reset&quot;&gt;重置&lt;/button&gt;    &lt;/form&gt;    &lt;output type=&quot;text&quot; id=&quot;user&quot;  name=&quot;test&quot;&gt;    &lt;script&gt;        function myFunction()        {          var data = document.getElementById(&apos;userdata&apos;);          alert(data.value.toUpperCase()); //弹对话框显示输出值          document.getElementById(&quot;user&quot;).innerHTML = data.value.toUpperCase();//直接显示输出值        }    &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><img src="/2018/04/07/my-first-javascript/Users\ADMINI~1\AppData\Local\Temp\1523111702014.png" alt="152308324369"></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/04/07/my-first-javascript/#disqus_thread</comments>
    </item>
    
    <item>
      <title>hexo常用命令</title>
      <link>http://yoursite.com/2018/04/07/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <guid>http://yoursite.com/2018/04/07/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <pubDate>Sat, 07 Apr 2018 04:34:55 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;hexo常用命令&quot;&gt;&lt;a href=&quot;#hexo常用命令&quot; class=&quot;headerlink&quot; title=&quot;hexo常用命令&quot;&gt;&lt;/a&gt;hexo常用命令&lt;/h3&gt;&lt;p&gt;Hexo 约有二十个命令，但普通用户经常使用的只有下列几个:&lt;/p&gt;
&lt;p&gt;hexo s是h
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h3><p>Hexo 约有二十个命令，但普通用户经常使用的只有下列几个:</p><p>hexo s是hexo server的缩写，命令效果一致；启动本地服务器，用于预览主题。默认地址： <a href="http://localhost:4000/预览的同时可以修改文章内容或主题代码，保存后刷新页面即可；对" target="_blank" rel="noopener">http://localhost:4000/预览的同时可以修改文章内容或主题代码，保存后刷新页面即可；对</a> Hexo 根目录_config.yml的修改，需要重启本地服务器后才能预览效果。</p><p>hexo n是hexo new的缩写，命令效果一致。如hexo n “标题”，是新建一篇标题文章，因为标题里有空格，所以加上了引号。文章标题可以在对应 md 文件里改，新建时标题可以写的简单些；</p><p>文章可以拥有如下属性：</p><p>无标题.png</p><p>无标题.png</p><p>hexo d是hexo deploy的缩写，命令效果一致。动态博客中通过发布文章页面设置的各种属性，在hexo里要这样设置。使用hexo d命令可以自动生成网站静态文件，并部署到设定的仓库。</p><p>hexo clean命令是用于清除缓存文件db.json和已生成的静态文件public。网站显示异常时可以执行这条命令试试。</p><p>hexo g是hexo generate的缩写，命令效果一致。生成网站静态文件到默认设置的public文件夹。便于查看网站生成的静态文件或者手动部署网站；如果使用自动部署，不需要先执行该命令；</p><p>hexo n page aboutme新建一个标题为aboutme的页面，默认链接地址为主页地址/aboutme/标题可以为中文，但一般习惯用英文；页面标题和文章一样可以随意修改；页面不会出现在首页文章列表和归档中，也不支持设置分类和标签。</p><p>hexo clean &amp;&amp; hexo shexo clean &amp;&amp; hexo d可以用输入法等软件为这些命令设置快捷键，方便调用。草稿草稿相当于很多博客都有的“私密文章”功能。$ hexo new draft “new draft”会在source/_drafts目录下生成一个new-draft.md文件。但是这个文件不被显示在页面上，链接也访问不到。也就是说如果你想把某一篇文章移除显示，又不舍得删除，可以把它移动到_drafts目录之中。如果你希望强行预览草稿，更改配置文件：render_drafts: true或者，如下方式启动server：$ hexo server –drafts下面这条命令可以把草稿变成文章，或者页面：$ hexo publish [layout] <filename></filename></p><p>以上命令使用基于 Hexo 3.1.1 版本；需要删掉用命令新建的文章或页面时，只需要进入 Hexo 根目录下的source文件夹，删除对应文件或文件夹即可；更多命令用法请查询 官方文档。</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/04/07/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#disqus_thread</comments>
    </item>
    
    <item>
      <title>微信小游戏的关系链数据</title>
      <link>http://yoursite.com/2018/04/06/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84%E5%85%B3%E7%B3%BB%E9%93%BE%E6%95%B0%E6%8D%AE/</link>
      <guid>http://yoursite.com/2018/04/06/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84%E5%85%B3%E7%B3%BB%E9%93%BE%E6%95%B0%E6%8D%AE/</guid>
      <pubDate>Fri, 06 Apr 2018 08:55:19 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;微信用户的关系链数据组成&quot;&gt;&lt;a href=&quot;#微信用户的关系链数据组成&quot; class=&quot;headerlink&quot; title=&quot;微信用户的关系链数据组成&quot;&gt;&lt;/a&gt;微信用户的关系链数据组成&lt;/h3&gt;&lt;p&gt;包括两部分：&lt;/p&gt;
&lt;p&gt; 该用户好友的用户数据&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="微信用户的关系链数据组成"><a href="#微信用户的关系链数据组成" class="headerlink" title="微信用户的关系链数据组成"></a>微信用户的关系链数据组成</h3><p>包括两部分：</p><p> 该用户好友的用户数据</p><p> 该用户所在的某个群的群成员的用户数据。</p><p>获取关系链数据的API：</p><p> <a href="https://developers.weixin.qq.com/minigame/dev/document/open-api/data/wx.getFriendCloudStorage.html?t=2018329" target="_blank" rel="noopener">wx.getFriendCloudStorage()</a>获取当前用户也玩该小游戏的好友的用户数据</p><p> <a href="https://developers.weixin.qq.com/minigame/dev/document/open-api/data/wx.getGroupCloudStorage.html?t=2018329" target="_blank" rel="noopener">wx.getGroupCloudStorage()</a> 获取当前用户在某个群中也玩该小游戏的成员的用户数据</p><p>API返回的结果为一个对象数组，数组的每一个元素都是一个表示用户数据的对象。</p><table><thead><tr><th>属性</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>openId</td><td>string</td><td>用户的openId</td></tr><tr><td>avatarUrI</td><td>string</td><td>用户的微信头像url</td></tr><tr><td>nickName</td><td>string</td><td>用户的微信昵称</td></tr><tr><td>data</td><td>Object</td><td>用户的游戏数据</td></tr></tbody></table><h3 id="关系链数据的应用场景"><a href="#关系链数据的应用场景" class="headerlink" title="关系链数据的应用场景"></a>关系链数据的应用场景</h3><p>例如 用户的段位、战绩、积分等排行榜，这些游戏业务特有的数据，都可以用到这个功能。</p><p>通过调用 <a href="https://developers.weixin.qq.com/minigame/dev/document/open-api/data/wx.setUserCloudStorage.html?t=2018329" target="_blank" rel="noopener">wx.setUserCloudStorage()</a> 可以将当前用户的游戏数据托管在微信后台。只有被托管过数据的用户，才会被视为 <code>玩过</code> 该小游戏的用户，才会出现在 <a href="https://developers.weixin.qq.com/minigame/dev/document/open-api/data/wx.getFriendCloudStorage.html?t=2018329" target="_blank" rel="noopener">wx.getFriendCloudStorage()</a> 和 <a href="https://developers.weixin.qq.com/minigame/dev/document/open-api/data/wx.getGroupCloudStorage.html?t=2018329" target="_blank" rel="noopener">wx.getGroupCloudStorage()</a>返回的对象数组中。</p><p>除此之外，我们还提供了以下 API：</p><ul><li><a href="https://developers.weixin.qq.com/minigame/dev/document/open-api/data/wx.removeUserCloudStorage.html?t=2018329" target="_blank" rel="noopener">wx.removeUserCloudStorage()</a> 删除用户托管数据中指定字段的数据</li><li><a href="https://developers.weixin.qq.com/minigame/dev/document/open-api/data/wx.getUserCloudStorage.html?t=2018329" target="_blank" rel="noopener">wx.getUserCloudStorage()</a> 获取当前用户的托管数据</li></ul><p><a href="https://developers.weixin.qq.com/minigame/dev/document/open-api/data/wx.getUserCloudStorage.html?t=2018329" target="_blank" rel="noopener">wx.getUserCloudStorage</a>、<a href="https://developers.weixin.qq.com/minigame/dev/document/open-api/data/wx.getFriendCloudStorage.html?t=2018329" target="_blank" rel="noopener">wx.getFriendCloudStorage()</a> 和 <a href="https://developers.weixin.qq.com/minigame/dev/document/open-api/data/wx.getGroupCloudStorage.html?t=2018329" target="_blank" rel="noopener">wx.getGroupCloudStorage()</a> 只能在 <code>开放数据域</code>中调用。<br><a href="https://developers.weixin.qq.com/minigame/dev/document/open-api/data/wx.setUserCloudStorage.html?t=2018329" target="_blank" rel="noopener">wx.setUserCloudStorage()</a> 和 <a href="https://developers.weixin.qq.com/minigame/dev/document/open-api/data/wx.removeUserCloudStorage.html?t=2018329" target="_blank" rel="noopener">wx.removeUserCloudStorage()</a> 可以同时在 <code>主域</code> 和开放数据域中调用。</p><h3 id="展示关系链数据"><a href="#展示关系链数据" class="headerlink" title="展示关系链数据"></a>展示关系链数据</h3><p>如果想要展示通过关系链 API 获取到的用户数据，如绘制排行榜等业务场景，需要将排行榜绘制到 <code>sharedCanvas</code> 上，再在主域将 sharedCanvas 渲染上屏。</p><p><a href="https://developers.weixin.qq.com/minigame/dev/tutorial/images/open-data/data-flow.png" target="_blank" rel="noopener"><img src="https://developers.weixin.qq.com/minigame/dev/tutorial/images/open-data/data-flow.png" alt="img"></a></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/04/06/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84%E5%85%B3%E7%B3%BB%E9%93%BE%E6%95%B0%E6%8D%AE/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Markdown 语法的简要规则</title>
      <link>http://yoursite.com/2018/04/06/Markdown-%E8%AF%AD%E6%B3%95%E7%9A%84%E7%AE%80%E8%A6%81%E8%A7%84%E5%88%99/</link>
      <guid>http://yoursite.com/2018/04/06/Markdown-%E8%AF%AD%E6%B3%95%E7%9A%84%E7%AE%80%E8%A6%81%E8%A7%84%E5%88%99/</guid>
      <pubDate>Fri, 06 Apr 2018 08:48:15 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;Markdown-语法的简要规则&quot;&gt;&lt;a href=&quot;#Markdown-语法的简要规则&quot; class=&quot;headerlink&quot; title=&quot;Markdown 语法的简要规则&quot;&gt;&lt;/a&gt;Markdown 语法的简要规则&lt;/h3&gt;&lt;h3 id=&quot;标题&quot;&gt;&lt;a hr
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="Markdown-语法的简要规则"><a href="#Markdown-语法的简要规则" class="headerlink" title="Markdown 语法的简要规则"></a>Markdown 语法的简要规则</h3><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p><a href="https://cdn.sspai.com/attachment/origin/2014/04/15/69492.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" target="_blank" rel="noopener"><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69492.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></a></p><p>标题是每篇文章都需要也是最常用的格式，在 Markdown 中，如果一段文字被定义为标题，只要在这段文字前加 <code>#</code> 号即可。</p><p><code># 一级标题</code></p><p><code>## 二级标题</code></p><p><code>### 三级标题</code></p><p>以此类推，总共六级标题，建议在井号后加一个空格，这是最标准的 Markdown 语法。</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>熟悉 HTML 的同学肯定知道有序列表与无序列表的区别，在 Markdown 下，列表的显示只需要在文字前加上 <code>-</code> 或 <code>*</code> 即可变为无序列表，有序列表则直接在文字前加 <code>1.`</code>2.<code></code>3.` 符号要和文字之间加上一个字符的空格。</p><p><a href="https://cdn.sspai.com/attachment/origin/2014/04/15/69493.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" target="_blank" rel="noopener"><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69493.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></a></p><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>如果你需要引用一小段别处的句子，那么就要用引用的格式。</p><p><code>&gt; 例如这样</code></p><p>只需要在文本前加入 <code>&gt;</code> 这种尖括号（大于号）即可</p><p><a href="https://cdn.sspai.com/attachment/origin/2014/04/15/69494.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" target="_blank" rel="noopener"><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69494.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></a></p><h3 id="图片与链接"><a href="#图片与链接" class="headerlink" title="图片与链接"></a>图片与链接</h3><p>插入链接与插入图片的语法很像，区别在一个 <code>!</code>号</p><p>插入图片的地址需要图床，这里推荐 <a href="http://www.getcloudapp.com/" target="_blank" rel="noopener">CloudApp</a> 的服务，生成URL地址即可。</p><p><a href="https://cdn.sspai.com/attachment/origin/2014/04/15/69495.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" target="_blank" rel="noopener"><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69495.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></a></p><h3 id="粗体与斜体"><a href="#粗体与斜体" class="headerlink" title="粗体与斜体"></a>粗体与斜体</h3><p>Markdown 的粗体和斜体也非常简单，用两个 <code>*</code> 包含一段文本就是粗体的语法，用一个 <code>*</code> 包含一段文本就是斜体的语法。</p><p>例如：<strong>这里是粗体*</strong>这里是斜体*</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>表格是我觉得 Markdown 比较累人的地方，例子如下：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">| Tables        |</span> Are           <span class="params">| Cool  |</span></span><br><span class="line"><span class="params">| ------------- |</span><span class="symbol">:-------------</span><span class="symbol">:|</span> -----<span class="symbol">:|</span></span><br><span class="line"><span class="params">| col 3 is      |</span> right-aligned <span class="params">| $1600 |</span></span><br><span class="line"><span class="params">| col 2 is      |</span> centered      <span class="params">|   $12 |</span></span><br><span class="line"><span class="params">| zebra stripes |</span> are neat      <span class="params">|    $1 |</span></span><br></pre></td></tr></table></figure><p>这种语法生成的表格如下：</p><table><thead><tr><th>Tables</th><th>Are</th><th>Cool</th></tr></thead><tbody><tr><td>col 3 is</td><td>right-aligned</td><td>$1600</td></tr><tr><td>col 2 is</td><td>centered</td><td>$12</td></tr><tr><td>zebra stripes</td><td>are neat</td><td>$1</td></tr></tbody></table><h3 id="代码框"><a href="#代码框" class="headerlink" title="代码框"></a>代码框</h3><p>如果你是个程序猿，需要在文章里优雅的引用代码框，在 Markdown 下实现也非常简单，只需要用两个 <code>把中间的代码包裹起来，如 `</code>code<code></code>。图例：</p><p><a href="https://cdn.sspai.com/attachment/origin/2014/04/15/69496.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" target="_blank" rel="noopener"><img src="https://cdn.sspai.com/attachment/origin/2014/04/15/69496.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></a></p><p>使用 <code>tab</code> 键即可缩进。</p><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>分割线的语法只需要另起一行，连续输入三个星号 <code>***</code> 即可。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>到这里，Markdown 的基本语法在日常的使用中基本就没什么大问题了，只要多加练习，配合好用的工具，写起东西来肯定会行云流水。更多的语法规则，其实 Mou 的 Help 文档例子很好，当你第一次使用 Mou 时，就会显示该文档，其次，你也可在撰写过程中，使用 <code>CMD+R</code> 快捷键来快速打开文档，以随时查阅和学习语法。</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/04/06/Markdown-%E8%AF%AD%E6%B3%95%E7%9A%84%E7%AE%80%E8%A6%81%E8%A7%84%E5%88%99/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
